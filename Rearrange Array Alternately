    void rearrange(long long *arr, int n) 
    { 
    	
      //Approach 1 by using extraspace
      
      //take a vector
      
    	vector <long long> tempAns;
      
    	if(n>1){
     
     //make a pointer on 0th index and another pointer on last node
     //first push last element then first element again put 2nd last element and put second smallest number .................
    	for(int i=0,j=n-1;i<=j;i++,j--){
    	    tempAns.push_back(arr[j]);
    	    tempAns.push_back(arr[i]);
    	}
      
      //copy tempAns into original array 
    	 for(int i=0;i<n;i++) {
    	     arr[i] = tempAns[i];
    	 }
    	}
    }
    
    
    
    
    
    //Approach-2 with O(1) space
    
     void rearrange(long long *arr, int n) 
    { 
    	
    //initialise a min with 0 and max with last index and maxele with last element data +1(for modulus)
    int min=0,max=n-1;
    	long long maxele=arr[n-1]+1;
      
    	for(int i=0;i<n;i++){
    	    if(i%2==0){
    	        arr[i]=(arr[i]+(arr[max]%maxele)*maxele);
    	        max--;
    	    }
    	    else{
    	        arr[i]=(arr[i]+(arr[min]%maxele)*maxele);
    	        min++;
    	    }
    	}
      
      
    	for(int i=0;i<n;i++){
      
      //here if we take modulus then orginal array comes and if we divide then wanted array will come
    	    arr[i]=arr[i]/maxele;
    	}
    }
