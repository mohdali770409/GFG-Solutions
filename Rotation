	
  //here the logic is using binary search 
  //if the mid element is smaller than previous element and greater than next element then return mid index
  
  int findKRotation(int arr[], int n) {
	 
	    int low = 0,high = n-1;
	    if(arr[0]<=arr[n-1]) return 0;
	    while(low<=high){
	        int mid = low + (high-low)/2;
	        if(arr[mid]<arr[mid-1] && arr[mid]<=arr[mid+1]) return mid;
	        else if(arr[mid]>=arr[0]) low = mid+1;
	        else high = mid-1;
	    }
	}
